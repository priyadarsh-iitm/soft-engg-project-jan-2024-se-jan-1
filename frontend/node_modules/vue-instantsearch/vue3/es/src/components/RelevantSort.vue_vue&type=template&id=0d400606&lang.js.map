{"version":3,"file":"RelevantSort.vue_vue&type=template&id=0d400606&lang.js","sources":["../../../../src/components/RelevantSort.vue?vue&type=template&id=0d400606&lang.js"],"sourcesContent":["<template>\n  <div v-if=\"state && state.isVirtualReplica\" :class=\"suit()\">\n    <slot :is-relevant-sorted=\"state.isRelevantSorted\" :refine=\"state.refine\">\n      <div :class=\"suit('text')\">\n        <slot name=\"text\" :is-relevant-sorted=\"state.isRelevantSorted\" />\n      </div>\n      <button type=\"button\" :class=\"suit('button')\" @click=\"refine()\">\n        <slot name=\"button\" :is-relevant-sorted=\"state.isRelevantSorted\">\n          {{\n            state.isRelevantSorted ? 'See all results' : 'See relevant results'\n          }}\n        </slot>\n      </button>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectRelevantSort } from 'instantsearch.js/es/connectors';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisRelevantSort',\n  mixins: [\n    createSuitMixin({ name: 'RelevantSort' }),\n    createWidgetMixin(\n      {\n        connector: connectRelevantSort,\n      },\n      {\n        $$widgetType: 'ais.relevantSort',\n      }\n    ),\n  ],\n  methods: {\n    refine() {\n      if (this.state.isRelevantSorted) {\n        this.state.refine(0);\n      } else {\n        this.state.refine(undefined);\n      }\n    },\n  },\n};\n</script>\n"],"names":["_ctx","isVirtualReplica","_createBlock","class","_renderSlot","isRelevantSorted","refine","_createVNode","type","onClick","$options"],"mappings":"mLACaA,SAASA,QAAMC,sBAA1BC,eAA6CC,MAAOH,WAClDI,sBAAOC,iBAAoBL,QAAMK,iBAAmBC,OAAQN,QAAMM,0BAChEC,SAAMJ,MAAOH,iBACXI,mBAAmBC,iBAAoBL,QAAMK,uBAE/CE,YAAQC,KAAK,SAAUL,MAAOH,iBAAiBS,uCAAOC,eACpDN,qBAAqBC,iBAAoBL,QAAMK,wCAE3CL,QAAMK"}