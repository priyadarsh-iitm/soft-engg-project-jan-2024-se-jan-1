{"version":3,"file":"SearchBox.vue_vue&type=script&lang.js","sources":["../../../../src/components/SearchBox.vue"],"sourcesContent":["<template>\n  <div v-if=\"state\" :class=\"suit()\">\n    <slot\n      :current-refinement=\"currentRefinement\"\n      :is-search-stalled=\"state.isSearchStalled\"\n      :refine=\"state.refine\"\n    >\n      <search-input\n        @focus=\"$emit('focus', $event)\"\n        @blur=\"$emit('blur', $event)\"\n        @reset=\"$emit('reset')\"\n        :placeholder=\"placeholder\"\n        :autofocus=\"autofocus\"\n        :show-loading-indicator=\"showLoadingIndicator\"\n        :should-show-loading-indicator=\"state.isSearchStalled\"\n        :submit-title=\"submitTitle\"\n        :reset-title=\"resetTitle\"\n        :class-names=\"classNames\"\n        v-model=\"currentRefinement\"\n        ref=\"searchInput\"\n      >\n        <template #loading-indicator v-if=\"isVue3\">\n          <slot name=\"loading-indicator\" />\n        </template>\n        <slot v-if=\"isVue2\" name=\"loading-indicator\" slot=\"loading-indicator\" />\n\n        <template #submit-icon v-if=\"isVue3\">\n          <slot name=\"submit-icon\" />\n        </template>\n        <slot v-if=\"isVue2\" name=\"submit-icon\" slot=\"submit-icon\" />\n\n        <template #reset-icon v-if=\"isVue3\">\n          <slot name=\"reset-icon\" />\n        </template>\n        <slot v-if=\"isVue2\" name=\"reset-icon\" slot=\"reset-icon\" />\n      </search-input>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectSearchBox } from 'instantsearch.js/es/connectors';\nimport { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { isVue3, isVue2 } from '../util/vue-compat';\nimport SearchInput from './SearchInput.vue';\n\nexport default {\n  name: 'AisSearchBox',\n  mixins: [\n    createWidgetMixin(\n      {\n        connector: connectSearchBox,\n      },\n      {\n        $$widgetType: 'ais.searchBox',\n      }\n    ),\n    createSuitMixin({ name: 'SearchBox' }),\n  ],\n  components: {\n    SearchInput,\n  },\n  props: {\n    placeholder: {\n      type: String,\n      default: 'Search hereâ€¦',\n    },\n    autofocus: {\n      type: Boolean,\n      default: false,\n    },\n    showLoadingIndicator: {\n      type: Boolean,\n      default: false,\n    },\n    submitTitle: {\n      type: String,\n      default: 'Search',\n    },\n    resetTitle: {\n      type: String,\n      default: 'Clear',\n    },\n    value: {\n      type: String,\n      default: undefined,\n    },\n    modelValue: {\n      type: String,\n      default: undefined,\n    },\n    queryHook: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  data() {\n    return {\n      localValue: '',\n      isVue2,\n      isVue3,\n    };\n  },\n  computed: {\n    widgetParams() {\n      return {\n        queryHook: this.queryHook,\n      };\n    },\n    isControlled() {\n      return (\n        typeof this.value !== 'undefined' ||\n        typeof this.modelValue !== 'undefined'\n      );\n    },\n    model() {\n      return this.value || this.modelValue;\n    },\n    currentRefinement: {\n      get() {\n        // if the input is controlled, but not up to date\n        // this means it didn't search, and we should pretend it was `set`\n        if (this.isControlled && this.model !== this.localValue) {\n          // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n          this.localValue = this.model;\n          this.$emit('input', this.model);\n          this.$emit('update:modelValue', this.model);\n          this.state.refine(this.model);\n        }\n\n        // we return the local value if the input is focused to avoid\n        // concurrent updates when typing\n        const { searchInput } = this.$refs;\n        if (searchInput && searchInput.isFocused()) {\n          return this.localValue;\n        }\n\n        return this.model || this.state.query || '';\n      },\n      set(val) {\n        this.localValue = val;\n        this.state.refine(val);\n        if (this.isControlled) {\n          this.$emit('input', val);\n          this.$emit('update:modelValue', val);\n        }\n      },\n    },\n  },\n};\n</script>\n"],"names":["name","mixins","createWidgetMixin","connector","connectSearchBox","$$widgetType","createSuitMixin","components","SearchInput","props","placeholder","type","String","default","autofocus","Boolean","showLoadingIndicator","submitTitle","resetTitle","value","undefined","modelValue","queryHook","Function","data","localValue","isVue2","isVue3","computed","widgetParams","this","isControlled","model","currentRefinement","get","$emit","state","refine","$refs","searchInput","isFocused","query","set","val"],"mappings":"+SA+Ce,CACbA,KAAM,eACNC,OAAQ,CACNC,EACE,CACEC,UAAWC,GAEb,CACEC,aAAc,kBAGlBC,EAAgB,CAAEN,KAAM,eAE1BO,WAAY,aACVC,GAEFC,MAAO,CACLC,YAAa,CACXC,KAAMC,OACNC,QAAS,gBAEXC,UAAW,CACTH,KAAMI,QACNF,SAAS,GAEXG,qBAAsB,CACpBL,KAAMI,QACNF,SAAS,GAEXI,YAAa,CACXN,KAAMC,OACNC,QAAS,UAEXK,WAAY,CACVP,KAAMC,OACNC,QAAS,SAEXM,MAAO,CACLR,KAAMC,OACNC,aAASO,GAEXC,WAAY,CACVV,KAAMC,OACNC,aAASO,GAEXE,UAAW,CACTX,KAAMY,SACNV,aAASO,IAGbI,gBACE,MAAO,CACLC,WAAY,UACZC,SACAC,IAGJC,SAAU,CACRC,wBACE,MAAO,CACLP,UAAWQ,KAAKR,YAGpBS,wBACE,YACwB,IAAfD,KAAKX,YACe,IAApBW,KAAKT,YAGhBW,iBACE,OAAOF,KAAKX,OAASW,KAAKT,YAE5BY,kBAAmB,CACjBC,eAGMJ,KAAKC,cAAgBD,KAAKE,QAAUF,KAAKL,aAE3CK,KAAKL,WAAaK,KAAKE,MACvBF,KAAKK,MAAM,QAASL,KAAKE,OACzBF,KAAKK,MAAM,oBAAqBL,KAAKE,OACrCF,KAAKM,MAAMC,OAAOP,KAAKE,cAKDF,KAAKQ,kBAC7B,OAAIC,GAAeA,EAAYC,YACtBV,KAAKL,WAGPK,KAAKE,OAASF,KAAKM,MAAMK,OAAS,IAE3CC,aAAIC,GACFb,KAAKL,WAAakB,EAClBb,KAAKM,MAAMC,OAAOM,GACdb,KAAKC,eACPD,KAAKK,MAAM,QAASQ,GACpBb,KAAKK,MAAM,oBAAqBQ"}