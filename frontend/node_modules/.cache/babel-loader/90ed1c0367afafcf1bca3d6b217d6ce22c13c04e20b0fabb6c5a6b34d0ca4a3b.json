{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"ResponseComponent\",\n  computed: {\n    ...mapGetters([\"role\", \"user_id\"])\n  },\n  data() {\n    return {\n      title: \"\",\n      description: \"\",\n      is_read: 0,\n      is_open: null,\n      ticket_id: this.$route.params.ticketId,\n      cid: null,\n      response: \"\",\n      responses: []\n    };\n  },\n  methods: {\n    async editOpen() {\n      // If ticket is marked as close and student replies then ticket gets reopened\n      if (this.$store.state.role == 1 && !this.is_open && this.$store.state.user_id == this.cid) {\n        let response = await axios.patch('/api/ticket', {\n          ticket_id: this.ticket_id,\n          is_open: true\n        });\n        console.log(response);\n      } else if (this.$store.state.role == 2 && this.is_open) {\n        let response = await axios.patch('/api/ticketAll', {\n          ticket_id: this.ticket_id,\n          is_open: false\n        });\n        console.log(response);\n      }\n    },\n    async addResponse() {\n      // console.log(this.response)\n      await axios.post(\"/api/respTicket\", {\n        ticket_id: this.ticket_id,\n        response: this.response\n      }).then(res => {\n        this.editOpen();\n        this.response = \"\";\n        this.$router.go();\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  },\n  async created() {\n    await axios.get(\"/api/ticketAll\").then(res => {\n      // console.log(res.data.data);\n      for (var i = 0; i < res.data.data.length; i++) {\n        if (this.ticket_id == res.data.data[i].ticket_id) {\n          this.title = res.data.data[i].title;\n          this.description = res.data.data[i].description;\n          this.is_read = res.data.data[i].is_read;\n          this.is_open = res.data.data[i].is_open;\n          this.cid = res.data.data[i].creator_id;\n        }\n      }\n    });\n    const role = localStorage.getItem(\"role\");\n    if (role == 2 && this.is_read == 0) {\n      await axios.patch(\"/api/ticketAll\", {\n        ticket_id: this.ticket_id,\n        is_read: 1\n      }).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n    var data = {\n      ticket_id: this.ticket_id\n    };\n    data = JSON.stringify(data);\n    await axios.post(\"/api/getResponseAPI_by_ticket\", data).then(res => {\n      // console.log(res.data.data);\n      for (var i = 0; i < res.data.data.length; i++) {\n        this.responses.push(res.data.data[i]);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n};","map":{"version":3,"names":["axios","mapGetters","name","computed","data","title","description","is_read","is_open","ticket_id","$route","params","ticketId","cid","response","responses","methods","editOpen","$store","state","role","user_id","patch","console","log","addResponse","post","then","res","$router","go","catch","err","created","get","i","length","creator_id","localStorage","getItem","JSON","stringify","push"],"sources":["E:\\IIT MADRAS\\SE_ST\\SE PROJECT\\Project 1\\Intermediate Work\\Code\\soft-engg-project-jan-2024-se-jan-1\\frontend\\src\\components\\ResponseComponent.vue"],"sourcesContent":["<template>\r\n    <div class=\"container dark-mode\">\r\n        <div class=\"topic-container\">\r\n            <div class=\"row\">\r\n                <p class=\"ticket-title\" style=\"color: #fff;\"><b>{{ title }}</b></p>\r\n                <p style=\"color: #fff;\">{{ description }}</p>\r\n            </div>\r\n            <br />\r\n            <hr style=\"border-color: #fff;\" />\r\n            <h3 style=\"color: #fff;\">Responses :</h3>\r\n            <hr style=\"border-color: #fff;\" />\r\n            <br />\r\n            <div v-for=\"r in responses\" :key=\"r.response_id\">\r\n                <p class=\"response\" style=\"color: #fff;\">{{ r.response }}</p>\r\n                <br />\r\n                <hr style=\"border-color: #fff;\" />\r\n            </div>\r\n            <form v-on:submit.prevent=\"addResponse\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-10\">\r\n                        <textarea class=\"form-control\" v-model=\"response\" placeholder=\"Enter Response\" rows=\"10\" required style=\"background-color: #333; color: #fff; border-color: #555;\"> </textarea>\r\n                    </div>\r\n                    <div class=\"col-md-2\">\r\n                        <button class=\"btn btn-primary\" type=\"submit\">Submit</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { mapGetters } from \"vuex\";\r\n\r\nexport default {\r\n    name: \"ResponseComponent\",\r\n    computed: {\r\n        ...mapGetters([\"role\", \"user_id\"]),\r\n    },\r\n    data() {\r\n        return {\r\n            title: \"\",\r\n            description: \"\",\r\n            is_read: 0,\r\n            is_open: null,\r\n            ticket_id: this.$route.params.ticketId,\r\n            cid : null,\r\n            response: \"\",\r\n            responses: []\r\n        };\r\n    },\r\n    methods: {\r\n        async editOpen() {\r\n            // If ticket is marked as close and student replies then ticket gets reopened\r\n            if (this.$store.state.role==1 && !this.is_open && this.$store.state.user_id==this.cid) {\r\n                let response = await axios.patch('/api/ticket', {\r\n                    ticket_id: this.ticket_id,\r\n                    is_open: true\r\n                });\r\n                console.log(response);\r\n            } else if (this.$store.state.role==2 && this.is_open) {\r\n                let response = await axios.patch('/api/ticketAll', {\r\n                    ticket_id: this.ticket_id,\r\n                    is_open: false\r\n                });\r\n                console.log(response);\r\n            }\r\n        },\r\n        async addResponse() {\r\n            // console.log(this.response)\r\n            await axios.post(\"/api/respTicket\", {\r\n                ticket_id: this.ticket_id,\r\n                response: this.response\r\n            }).then((res) => {\r\n                this.editOpen();\r\n                this.response = \"\";\r\n                this.$router.go();\r\n                console.log(res);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n        }\r\n    },\r\n    async created() {\r\n        await axios.get(\"/api/ticketAll\").then((res) => {\r\n            // console.log(res.data.data);\r\n            for (var i = 0; i < res.data.data.length; i++) {\r\n                if (this.ticket_id == res.data.data[i].ticket_id) {\r\n                    this.title = res.data.data[i].title;\r\n                    this.description = res.data.data[i].description;\r\n                    this.is_read = res.data.data[i].is_read;\r\n                    this.is_open = res.data.data[i].is_open;\r\n                    this.cid = res.data.data[i].creator_id;\r\n                }\r\n            }\r\n        });\r\n        const role = localStorage.getItem(\"role\");\r\n        if (role == 2 && this.is_read == 0) {\r\n            await axios.patch(\"/api/ticketAll\", {\r\n                ticket_id: this.ticket_id,\r\n                is_read: 1\r\n            }).then((res) => {\r\n                console.log(res);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n        }\r\n        var data = {\r\n            ticket_id: this.ticket_id\r\n        }\r\n        data = JSON.stringify(data);\r\n        await axios.post(\"/api/getResponseAPI_by_ticket\", data).then((res) => {\r\n            // console.log(res.data.data);\r\n            for (var i = 0; i < res.data.data.length; i++) {\r\n                this.responses.push(res.data.data[i]);\r\n            }\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n\r\n    },\r\n}\r\n</script>\r\n<style scoped>\r\n.topic-container {\r\n    margin: 33px 63px;\r\n}\r\n\r\n.upvote {\r\n    font-size: 20px;\r\n}\r\n\r\n.ticket-title {\r\n    font-weight: bold;\r\n    font-size: 25px;\r\n}\r\n\r\n.response {\r\n    font-size: 20px;\r\n\r\n}\r\n\r\na {\r\n    color: rgb(255, 255, 255);\r\n    text-decoration: none;\r\n}\r\n\r\n.dropdown-menu a {\r\n    color: rgb(0, 0, 0);\r\n    text-decoration: none;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}