{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"DashboardSupportAgentComponent\",\n  data() {\n    return {\n      tickets: [],\n      selected_ticket: null,\n      selected_creator: null\n    };\n  },\n  async created() {\n    await axios.get(\"/api/ticketAll\").then(res => {\n      // console.log(res.data.data);\n      for (var i = 0; i < res.data.data.length; i++) {\n        if (res.data.data[i].is_open == 1) this.tickets.push(res.data.data[i]);\n      }\n    });\n  },\n  methods: {\n    async flagTicket(ticket_id, creator_id) {\n      var data = {\n        ticket_id: ticket_id,\n        is_offensive: 1\n      };\n      data = JSON.stringify(data);\n      await axios.patch(\"/api/ticketAll\", data).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n      let flagger_id = localStorage.getItem(\"user_id\");\n      await axios.post(\"/api/flaggedPosts\", {\n        ticket_id: ticket_id,\n        creator_id: creator_id,\n        flagger_id: flagger_id\n      });\n      this.$router.go();\n    },\n    sort_upvotes() {\n      this.tickets.sort((a, b) => {\n        return b.number_of_upvotes - a.number_of_upvotes;\n      });\n    },\n    sort_time() {\n      this.tickets.sort((a, b) => {\n        // console.log(new Date(b.creation_date) - new Date(a.creation_date));\n        return new Date(b.creation_date) - new Date(a.creation_date);\n      });\n    },\n    async suggestFAQ(ticket_id) {\n      var data = {\n        ticket_id: ticket_id,\n        is_FAQ: true\n      };\n      // data = JSON.stringify(data);\n      await axios.patch(\"/api/ticketAll\", data).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n      this.$router.go();\n    },\n    async mark_as_closed(ticket_id) {\n      var data = {\n        ticket_id: ticket_id,\n        is_open: 0\n      };\n      data = JSON.stringify(data);\n      await axios.patch(\"/api/ticketAll\", data).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n      this.$router.go();\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","tickets","selected_ticket","selected_creator","created","get","then","res","i","length","is_open","push","methods","flagTicket","ticket_id","creator_id","is_offensive","JSON","stringify","patch","console","log","catch","err","flagger_id","localStorage","getItem","post","$router","go","sort_upvotes","sort","a","b","number_of_upvotes","sort_time","Date","creation_date","suggestFAQ","is_FAQ","mark_as_closed"],"sources":["E:\\IIT MADRAS\\SE_ST\\SE PROJECT\\Project 1\\Intermediate Work\\Code\\soft-engg-project-jan-2024-se-jan-1\\frontend\\src\\components\\DashboardSupportAgentComponent.vue"],"sourcesContent":["<template>\r\n    <div class=\"container dark-mode\">\r\n        <div class=\"topic-container\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-10\">\r\n                    <h3 style=\"color: a; text-align: center;\">Hi Agent</h3>\r\n                </div>\r\n                <div class=\"col-md-2\">\r\n                    <div class=\"btn-group\">\r\n                        <button type=\"button\" class=\"btn dropdown-toggle sortB\" data-bs-toggle=\"dropdown\" style=\"color: #fff;\">\r\n                            Sort\r\n                        </button>\r\n                        <ul class=\"dropdown-menu\">\r\n                            <li class=\"dropdown-item text-center\" @click=\"sort_upvotes\" style=\"cursor: pointer;\">Number of upvotes</li>\r\n                            <li class=\"dropdown-item text-center\" @click=\"sort_time\" style=\"cursor: pointer;\">Time of creation</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br />\r\n            <div v-for=\"t in tickets\" :key=\"t.ticket_id\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-10\">\r\n                        <RouterLink :to=\"{ name: 'response', params: { ticketId: t.ticket_id } }\">\r\n                            <p class=\"ticket-title\" style=\"color: #fff;\">\r\n                                {{ t.title }}\r\n                            </p>\r\n                        </RouterLink>\r\n                        <p style=\"color: #fff;\">{{ t.description }}</p>\r\n                    </div>\r\n                    <div class=\"col-md-2\">\r\n                        <div class=\"row mt-3\">\r\n                            <button class=\"btn upvote\" style=\"color: #fff;\">^<br>{{ t.number_of_upvotes }}</button>\r\n                        </div>\r\n                        <div class=\"row mt-3\">\r\n                            <div class=\"btn-group\">\r\n                                <button type=\"button\" class=\"btn dropdown-toggle\" data-bs-toggle=\"dropdown\" style=\"color: #fff;\">\r\n                                    Options\r\n                                </button>\r\n                                <ul class=\"dropdown-menu\">\r\n                                    <li class=\"dropdown-item text-center\" data-bs-toggle=\"modal\" data-bs-target=\"#confirmModal\" @click=\"this.selected_ticket=t.ticket_id; this.selected_creator=t.creator_id\" style=\"cursor: pointer;\">Flag</li>\r\n                                    <li class=\"dropdown-item text-center\" @click=\"suggestFAQ(t.ticket_id)\" style=\"cursor: pointer;\">Suggest as FAQ</li>\r\n                                    <li class=\"dropdown-item text-center\" @click=\"mark_as_closed(t.ticket_id)\" style=\"cursor: pointer;\">Mark as closed</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr style=\"border-color: #555;\">\r\n            </div>\r\n        </div>\r\n         <!-- Modal -->\r\n         <div class=\"modal fade\" id=\"confirmModal\" tabindex=\"-1\" aria-labelledby=\"confirmModal\" aria-hidden=\"true\">\r\n            <div class=\"modal-dialog\">\r\n                <div class=\"modal-content\" style=\"background-color: #333; color: #fff;\">\r\n                    <div class=\"modal-header\">\r\n                        <h5 class=\"modal-title\" id=\"confirmModal\">Are you sure you want to flag this post as offensive ?</h5>\r\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\" @click=\"flagTicket(this.selected_ticket, this.selected_creator)\">Yes</button>\r\n                        <button type=\"button\" class=\"btn btn-secondary btn-outline-secondary\" data-bs-dismiss=\"modal\">No</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n    name: \"DashboardSupportAgentComponent\",\r\n    data() {\r\n        return {\r\n            tickets: [],\r\n            selected_ticket: null,\r\n            selected_creator: null\r\n        };\r\n    },\r\n    async created() {\r\n        await axios.get(\"/api/ticketAll\").then((res) => {\r\n            // console.log(res.data.data);\r\n            for (var i = 0; i < res.data.data.length; i++) {\r\n                if(res.data.data[i].is_open == 1)\r\n                    this.tickets.push(res.data.data[i]);\r\n            }\r\n        });\r\n    },\r\n    methods: {\r\n        async flagTicket(ticket_id, creator_id) {\r\n            var data = {\r\n                ticket_id: ticket_id,\r\n                is_offensive: 1\r\n            }\r\n            data = JSON.stringify(data);\r\n            await axios.patch(\"/api/ticketAll\", data).then((res) => {\r\n                console.log(res);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n            let flagger_id = localStorage.getItem(\"user_id\")\r\n            await axios.post(\"/api/flaggedPosts\", {ticket_id: ticket_id, creator_id: creator_id, flagger_id: flagger_id});\r\n            this.$router.go();\r\n        },\r\n        sort_upvotes() {\r\n            this.tickets.sort((a, b) => {\r\n                return b.number_of_upvotes - a.number_of_upvotes;\r\n            });\r\n        },\r\n        sort_time() {\r\n            this.tickets.sort((a, b) => {\r\n                // console.log(new Date(b.creation_date) - new Date(a.creation_date));\r\n                return new Date(b.creation_date) - new Date(a.creation_date);\r\n            });\r\n        },\r\n        async suggestFAQ(ticket_id) {\r\n            var data = {\r\n                ticket_id: ticket_id,\r\n                is_FAQ: true\r\n            }\r\n            // data = JSON.stringify(data);\r\n            await axios.patch(\"/api/ticketAll\", data).then((res) => {\r\n                console.log(res);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n            this.$router.go();\r\n        },\r\n        async mark_as_closed(ticket_id) {\r\n            var data = {\r\n                ticket_id: ticket_id,\r\n                is_open: 0\r\n            }\r\n            data = JSON.stringify(data);\r\n            await axios.patch(\"/api/ticketAll\", data).then((res) => {\r\n                console.log(res);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n            this.$router.go();\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.topic-container {\r\n    margin: 33px 63px;\r\n}\r\n\r\n.upvote {\r\n    font-size: 20px;\r\n}\r\n\r\n.ticket-title {\r\n    font-weight: bold;\r\n    font-size: 25px;\r\n}\r\n\r\n.btn a {\r\n    color: rgb(255, 255, 255);\r\n    text-decoration: none;\r\n}\r\n\r\na {\r\n    color: rgb(0, 0, 0);\r\n    text-decoration: none;\r\n}\r\n\r\n.sortB {\r\n    background-color: #000000;\r\n    color: #ffffff;\r\n    font-weight: bold;\r\n    font-size: 10px;\r\n    border-radius: 10%;\r\n}\r\n\r\n.closed {\r\n    border: none;\r\n    background: #2fe72f;\r\n    border-radius: 10%;\r\n    color: white;\r\n    margin-bottom: 5px;\r\n    margin-right: 10px;\r\n}\r\n\r\n.open {\r\n    border: none;\r\n    background: #e7572f;\r\n    border-radius: 10%;\r\n    color: white;\r\n    margin-bottom: 5px;\r\n    margin-right: 10px;\r\n}\r\n\r\n.btn-grp {\r\n    display: flex;\r\n    flex-direction: row;\r\n    /* margin-right: 2px; */\r\n}\r\n</style>"],"mappings":";AAuEA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACXC,IAAI,EAAE,gCAAgC;EACtCC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,OAAO,EAAE,EAAE;MACXC,eAAe,EAAE,IAAI;MACrBC,gBAAgB,EAAE;IACtB,CAAC;EACL,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACZ,MAAMN,KAAK,CAACO,GAAG,CAAC,gBAAgB,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;MAC5C;MACA,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAID,GAAG,CAACP,IAAI,CAACA,IAAI,CAACS,MAAM,EAAED,CAAC,EAAE,EAAE;QAC3C,IAAGD,GAAG,CAACP,IAAI,CAACA,IAAI,CAACQ,CAAC,CAAC,CAACE,OAAM,IAAK,CAAC,EAC5B,IAAI,CAACT,OAAO,CAACU,IAAI,CAACJ,GAAG,CAACP,IAAI,CAACA,IAAI,CAACQ,CAAC,CAAC,CAAC;MAC3C;IACJ,CAAC,CAAC;EACN,CAAC;EACDI,OAAO,EAAE;IACL,MAAMC,UAAUA,CAACC,SAAS,EAAEC,UAAU,EAAE;MACpC,IAAIf,IAAG,GAAI;QACPc,SAAS,EAAEA,SAAS;QACpBE,YAAY,EAAE;MAClB;MACAhB,IAAG,GAAIiB,IAAI,CAACC,SAAS,CAAClB,IAAI,CAAC;MAC3B,MAAMF,KAAK,CAACqB,KAAK,CAAC,gBAAgB,EAAEnB,IAAI,CAAC,CAACM,IAAI,CAAEC,GAAG,IAAK;QACpDa,OAAO,CAACC,GAAG,CAACd,GAAG,CAAC;MACpB,CAAC,CAAC,CAACe,KAAK,CAAEC,GAAG,IAAK;QACdH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MACpB,CAAC,CAAC;MACF,IAAIC,UAAS,GAAIC,YAAY,CAACC,OAAO,CAAC,SAAS;MAC/C,MAAM5B,KAAK,CAAC6B,IAAI,CAAC,mBAAmB,EAAE;QAACb,SAAS,EAAEA,SAAS;QAAEC,UAAU,EAAEA,UAAU;QAAES,UAAU,EAAEA;MAAU,CAAC,CAAC;MAC7G,IAAI,CAACI,OAAO,CAACC,EAAE,EAAE;IACrB,CAAC;IACDC,YAAYA,CAAA,EAAG;MACX,IAAI,CAAC7B,OAAO,CAAC8B,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACxB,OAAOA,CAAC,CAACC,iBAAgB,GAAIF,CAAC,CAACE,iBAAiB;MACpD,CAAC,CAAC;IACN,CAAC;IACDC,SAASA,CAAA,EAAG;MACR,IAAI,CAAClC,OAAO,CAAC8B,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACxB;QACA,OAAO,IAAIG,IAAI,CAACH,CAAC,CAACI,aAAa,IAAI,IAAID,IAAI,CAACJ,CAAC,CAACK,aAAa,CAAC;MAChE,CAAC,CAAC;IACN,CAAC;IACD,MAAMC,UAAUA,CAACxB,SAAS,EAAE;MACxB,IAAId,IAAG,GAAI;QACPc,SAAS,EAAEA,SAAS;QACpByB,MAAM,EAAE;MACZ;MACA;MACA,MAAMzC,KAAK,CAACqB,KAAK,CAAC,gBAAgB,EAAEnB,IAAI,CAAC,CAACM,IAAI,CAAEC,GAAG,IAAK;QACpDa,OAAO,CAACC,GAAG,CAACd,GAAG,CAAC;MACpB,CAAC,CAAC,CAACe,KAAK,CAAEC,GAAG,IAAK;QACdH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MACpB,CAAC,CAAC;MACF,IAAI,CAACK,OAAO,CAACC,EAAE,EAAE;IACrB,CAAC;IACD,MAAMW,cAAcA,CAAC1B,SAAS,EAAE;MAC5B,IAAId,IAAG,GAAI;QACPc,SAAS,EAAEA,SAAS;QACpBJ,OAAO,EAAE;MACb;MACAV,IAAG,GAAIiB,IAAI,CAACC,SAAS,CAAClB,IAAI,CAAC;MAC3B,MAAMF,KAAK,CAACqB,KAAK,CAAC,gBAAgB,EAAEnB,IAAI,CAAC,CAACM,IAAI,CAAEC,GAAG,IAAK;QACpDa,OAAO,CAACC,GAAG,CAACd,GAAG,CAAC;MACpB,CAAC,CAAC,CAACe,KAAK,CAAEC,GAAG,IAAK;QACdH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MACpB,CAAC,CAAC;MACF,IAAI,CAACK,OAAO,CAACC,EAAE,EAAE;IACrB;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}